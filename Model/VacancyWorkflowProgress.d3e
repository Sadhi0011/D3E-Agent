(Model VacancyWorkflowProgress {
    properties [
        (candidate {
            name 'Candidate'
            type ({
                model #Candidate
            })
            required true
        })
        (fromState {
            name 'From State'
            type ({
                optionSet #WorkflowEventState
            })
        })
        (toState {
            name 'To State'
            type ({
                optionSet #WorkflowEventState
            })
        })
        (type {
            name 'Type'
            type ({
                optionSet #WorkflowEventType
            })
        })
        (date {
            name 'Date'
            type ({
                primitive DateTime
            })
            required true
            existsIf `toState == Scheduled || toState == Rescheduled`
        })
        (interviewType {
            name 'Interview Type'
            type ({
                optionSet #InterviewType
            })
            existsIf `type == Interview`
        })
        (stage{
            type ({
                model #VacancyWorkflowStage
            })
            required true
            description 'Which stage this event belongs to'
        })
        (outcomeScore{
            type ({
                primitive Integer
            })
        })
        (outcomePass{
            type ({
                primitive Boolean
            })
        })
    ]
    actions [
    ]
})