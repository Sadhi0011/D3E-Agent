Model {
    package 'lead.management'
    name 'Lead'
    properties [
        {
            name 'Name'
            type String
            required true
        }
        {
            name 'Email'
            type String
        }
        {
            name 'Phone'
            type String
        }
        {
            name 'Company'
            type String
        }
        {
            name 'Status'
            type LeadStatus
            required true
        }
        {
            name 'Source'
            type String
        }
        {
            name 'Notes'
            type String
        }
        {
            name 'Current Position'
            type String
        }
        {
            name 'Industry'
            type String
        }
        {
            name 'Previous Positions'
            collection true
            type String
        }
        {
            name 'Skills'
            collection true
            type String
        }
        {
            name 'Education History'
            collection true
            type Education
            child true
        }
        {
            name 'Lead Assignment'
            type LeadAssignment
            inverse true
            inverseProperty lead
        }
        {
            name 'Preferred Contact Method'
            type String
        }
        {
            name 'Time Zone'
            type String
        }
        {
            name 'Languages'
            collection true
            type String
        }
        {
            name 'Budget'
            type Double
        }
        {
            name 'Expressed Needs'
            type String
            longText true
        }
        {
            name 'Identified Pain Points'
            type String
            longText true
        }
        {
            name 'Decision Making Role'
            type String
        }
        {
            name 'Expected Purchase Date'
            type Date
        }
        {
            name 'Interaction History'
            collection true
            type Interaction
            inverse true
            inverseProperty lead
        }
        {
            name 'LinkedIn Profile'
            type String
        }
        {
            name 'InteractionDate'
            type Date
        }
        {
            name 'interactionType'
            type InteractionType
        }
        {
            name 'Details'
            type String
        }
        {
            name 'Twitter Handle'
            type String
        }
        {
            name 'Facebook Profile'
            type String
        }
        {
            name 'Company Size'
            type String
        }
        {
            name 'Company Revenue'
            type String
        }
        {
            name 'Company Website'
            type String
        }
        {
            name 'Birth Date'
            type Date
        }
        {
            name 'Location'
            type String
        }
        {
            name 'Interests'
            collection true
            type String
        }
        {
            name 'Family Info'
            type FamilyInfo
            child true
        }
        {
            name 'lastInteraction'
            type Interaction
        }
        {
            name 'Created By'
            type User
        }
        {
            name 'Email Status'
            type EmailStatus
        }
        {
            name 'apolloId'
            type String
        }
        {
            name 'Needs'
            collection true
            type String
        }
        {
            name 'Pains'
            collection true
            type String
        }
        {
            name 'handling User'
            type User
            computed true
            computation `leadAssignment != null ? leadAssignment.assignedTo : null`
        }
        {
            name 'Emails'
            collection true
            type MailMessage
            inverse true
            inverseProperty lead
        }
        {
            name 'lastEmailSyncDate'
            type DateTime
        }
        {
            name 'Has Unread Interactions'
            type Boolean
            defaultValue `false`
        }
        {
            name 'unreadInteractionsCount'
            type Integer
            defaultValue `0`
        }
        {
            name 'ext'
            type String
        }
    ]
    display `name`
    needCreatedDate true
    needUpdatedDate true
    actions [
        {
            name 'onLeadUpdate'
            runOn OnUpdate
            block ```
                if(!this.hasUnreadInteractions) {
                    this.unreadInteractionsCount = 0;
                } else {
                    if(this.hasUnreadInteractions && (old.lastInteraction != this.lastInteraction)){
                        this.unreadInteractionsCount = this.unreadInteractionsCount + 1;
                    }
                }
            ```
        }
    ]
} 