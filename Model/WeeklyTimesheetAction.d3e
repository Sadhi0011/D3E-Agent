(Model WeeklyTimesheetAction {
    name 'WeeklyTimesheetAction'
    
    package 'rewa.hr.2'
    properties [
        (timesheet {
            name 'Timesheet'
            type ({
                model #WeeklyTimeSheet
            })
            required true
        })
        (performedBy {
            name 'Performed By'
            type ({
                model #Employee
            })
        })
        (type {
            name 'Type'
            type ({
                optionSet #WeeklyTimesheetActionType
            })
        })
        (comment {
            name 'Comment'
            type ({
                primitive String
            })
            longText true
        })
    ]
    actions [
        (SendEmail {
            name 'SendEmail'
            block ```
                WeeklyTimesheetStatus fromStatus = timesheet.status;
                WorkflowActionState from;
                WorkflowActionState to;
                WeeklyTimesheetStatus toStatus = NotSubmitted;

                switch(fromStatus) {
                    case NotSubmitted:
                        from = NotSubmitted;
                    case Submitted:
                        from = Submitted;
                    case Approved:
                        from = Approved;
                    case Rejected:
                        from = Rejected;
                }
                
                switch (type) {
                    case Submit:
                        toStatus = Submitted;
                        to = Submitted;
                    case Approve:
                        toStatus = Approved;
                        to = Approved;
                    case Reject:
                        toStatus = Rejected;
                        to = Rejected;
                }
                timesheet.status = toStatus;
                
                EndUser user = CurrentUser.get() as EndUser;
                if(user.employee != null) {
                    EmailContext repl = EmailContext(Map.fromIterables([
                        'SubmitterName',
                        'RejectorName',
                        'StartDate',
                        'EndDate',
                        'Comment',
                    ], [
                        timesheet.employee.name,
                        user.employee.name,
                        timesheet.period.from.toString(),
                        timesheet.period.to.toString(),
                        comment,
                    ]));
                    
                    NotificationHelper.sendActionBasedEmails(
                        TimesheetSubmission,
                        repl,
                        timesheet.employee,
                        from,
                        to,
                    );
                    
                    NotificationHelper.sendActionBasedEmails(
                        TimesheetRejection,
                        repl,
                        timesheet.employee,
                        from,
                        to,
                    );
                    
                    NotificationHelper.sendActionBasedEmails(
                        TimesheetApproval,
                        repl,
                        timesheet.employee,
                        from,
                        to,
                    );
                }
            ```
        })
    ]
    needCreatedDate true
})