(Model LeaveShorcut {
    creatable false
    properties [
         (leaveType {
            name 'Leave Type'
            type ({
                model #LeaveType
            })
            
        })
        (fromDate {
            name 'From Date'
            type ({
                primitive Date
            })
            
        })
        (toDate {
            name 'To Date'
            type ({
                primitive Date
            })
           
        })
       
        (netLeaveBalanceDays {
            name 'Net Leave Balance Days'
            type ({
                primitive Double
            })
        
        })
        (numberOfDays {
            name 'Number Of Days'
            type ({
                primitive Double
            })
            
        })
        (status {
            name 'Status'
            type ({
                optionSet #LeaveStatus
            })
            
        })
        (partialDays {
            name 'Partial Days'
            type ({
                optionSet #PartialDays
            })
            existsIf `this.fromDate != this.toDate`
            
        })
        (startDuration {
            name 'Start Duration'
            type ({
                optionSet #LeaveDuration
            })
            
        })
        (endDuration {
            name 'End Duration'
            type ({
                optionSet #LeaveDuration
            })
            
        })
        (allDuration {
            name 'All Duration'
            type ({
                optionSet #LeaveDuration
            })
            existsIf `this.fromDate == this.toDate`
            
        })
        (startMorningHalf {
            name 'Start Morning Half'
            type ({
                primitive Boolean
            })
            existsIf `this.allDuration == HalfDay`
            
        })
        (endMorningHalf {
            name 'End Morning Half'
            type ({
                primitive Boolean
            })
            existsIf `this.allDuration == HalfDay`
            
        })
        (allMorningHalf {
            name 'All Morning Half'
            type ({
                primitive Boolean
            })
            existsIf `this.allDuration == FullDay`
            
        })
        (startPartialFrom {
            name 'Start Partial From'
            type ({
                primitive Time
            })
            
        })
        (startPartialTo {
            name 'Start Partial To'
            type ({
                primitive Time
            })
            
        })
        (endPartialFrom {
            name 'End Partial From'
            type ({
                primitive Time
            })
            
        })
        (endPartialTo {
            name 'End Partial To'
            type ({
                primitive Time
            })
            
        })
        (allPartialFrom {
            name 'All Partial From'
            type ({
                primitive Time
            })
    
        })
        (allPartialTo {
            name 'All Partial To'
            type ({
                primitive Time
            })
            
        })
        (startPartialDuration {
            name 'Start Partial Duration'
            type ({
                primitive Duration
            })
            
        })
        (endPartialDuration {
            name 'End Partial Duration'
            type ({
                primitive Duration
            })
            
        })
        (leaveDays {
            name 'Leave Days'
            collection true
            type ({
                model #LeaveDay
            })
            
            child true
        })
        (attachment {
            name 'Attachment'
            type ({
                model #Attachment
            })
            inverse true
            inverseProperty #leaveShortcut
        })
        (nominees {
            name 'Nominees'
            collection true
            type ({
                model #Employee
            })
            
        })
        (appliedOn {
            name 'Applied On'
            type ({
                primitive Date
            })
        })
        (initalComment {
            name 'InitalComment'
            type ({
                primitive String
            })
        })
    ]
})