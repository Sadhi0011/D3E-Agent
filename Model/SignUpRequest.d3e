(Model SignUpRequest {
    name 'SignUp Request'
    master #Company
    package 'rewa.hr.2'
    properties [
        (email {
            name 'Email'
            type ({
                primitive String
            })
            required true
            validations [
                ({
                    errorMsg 'Invalid email'
                    expression `FieldValidation.isEmail(it)`
                })
            ]
        })
        (url {
            name 'Url'
            type ({
                primitive String
            })
            required true
        })
        (fullName {
            name 'Full Name'
            type ({
                primitive String
            })
            computed true
            computation `this.firstName + ' '+ this.lastName`
        })
        (industry {
            name 'Industry'
            type ({
                primitive String
            })
        })
        (company {
            name 'Company'
            type ({
                primitive String
            })
            required true
        })
        (phoneNumber {
            name 'Phone Number'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Allows numbers and only + - / ( )'
                    expression `RegExp(r'^\+?[0-9]{6,14}$').hasMatch(it)`
                })
            ]
        })
        (password {
            name 'Password'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Password length must be at least 8 characters.'
                    expression `it.length >= 8`
                })
            ]
            required true
        })
        (user {
            name 'User'
            type ({
                model #EndUser
            })
            readType None
        })
        (key {
            name 'Key'
            type ({
                primitive String
            })
            readType None
        })
        (country {
            name 'Country'
            type ({
                primitive String
            })
            required true
        })
        (state {
            name 'State'
            type ({
                primitive String
            })
            required true
        })
        (firstName {
            name 'First Name'
            type ({
                primitive String
            })
            required true
        })
        (lastName {
            name 'Last Name'
            type ({
                primitive String
            })
            required true
        })
        (dateFormat {
            type ({
                optionSet #PreferencesDateFormat
            })
        })
        (language {
            name 'Language'
            type ({
                primitive String
            })
        })
        (logo {
            name 'Logo'
            type ({
                primitive DFile
            })
        })
    ]
    actions [
        (CreateDeveloper {
            name 'CreateDeveloper'
            block ```
                SignupUtils.onCreate(this);
                if(this.email != null){
                    Services.getEmailService().sendVerificationEmail(email, 'SignUp', subject : 'Please verify your email', html: true, body : '<html>Please <a href="{link}">Click Here</a> to complete signup process.</html>');
                }
            ```
        })
    ]
})