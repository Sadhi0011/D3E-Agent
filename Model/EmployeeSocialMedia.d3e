(Model EmployeeSocialMedia {
    name 'Employee Social Media'
    
    master #Employee
    enableCustomFields true
    package 'rewahr.com'
    properties [
        (type {
            name 'Type'
            type ({
                optionSet #SocialMediaType
            })
            required true
        })
        (handle {
            name 'Handle'
            type ({
                primitive String
            })
            required true
        })
        (link {
            name 'Link'
            type ({
                primitive String
            })
        })
        (allowShareInPublic {
            name 'Allow Share In Public'
            type ({
                primitive Boolean
            })
        })
    ]
    actions [
        (saveAuditRecordOnCreate {
            runOn OnCreate
            block ```
                List<String> changes = [
                    EmployeeUtil.getChangedStringForNewField('Type', type),
                    EmployeeUtil.getChangedStringForNewField('Handle', handle),
                    EmployeeUtil.getChangedStringForNewField('Link', link),
                    EmployeeUtil.getChangedStringForNewField('Allow Share In Public', allowShareInPublic)
                ];

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'ADD SOCIAL MEDIA DETAILS -I',
                        employee: employee,
                        section: 'Personal Details',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (saveAuditRecordOnUpdate {
            runOn OnCreate
            block ```
                if (old == null) {
                    return;
                }

                List<String> changes = [
                    EmployeeUtil.getChangedFromStringFromObjects('Type', old.type, type),
                    EmployeeUtil.getChangedFromStringFromObjects('Handle', old.handle, handle),
                    EmployeeUtil.getChangedFromStringFromObjects('Link', old.link, link),
                    EmployeeUtil.getChangedFromStringFromObjects('Allow Share In Public', old.allowShareInPublic, allowShareInPublic)
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'UPDATE SOCIAL MEDIA DETAILS -U',
                        employee: employee,
                        section: 'Personal Details',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
    ]
})