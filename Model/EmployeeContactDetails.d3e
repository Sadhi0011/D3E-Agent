(Model EmployeeContactDetails {
    name 'Employee Contact Details'
    allowDynamicReport true
    package 'rewahr.com'
    master #Employee
    enableCustomFields true
    properties [
        (addressStreet1 {
            name 'Address Street 1'
            type ({
                primitive String
            })
        })
        (addressStreet2 {
            name 'Address Street 2'
            type ({
                primitive String
            })
        })
        (cityTown {
            name 'City Town'
            type ({
                primitive String
            })
        })
        (stateProvince {
            name 'State Province'
            type ({
                primitive String
            })
        })
        (zIPCode {
            name 'ZIP Code'
            type ({
                primitive Integer
            })
        })
        (country {
            name 'Country'
            type ({
                primitive String
            })
        })
        (mobile {
            name 'Mobile'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Allows numbers and only + - / ( )'
                    expression `it == '' || it.isEmpty || RegExp(r'(\+?([ ()-+]|[0-9])+)$').hasMatch(it)`
                })
            ]
        })
        (homeTelephone {
            name 'Home Telephone'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Allows numbers and only + - / ( )'
                    expression `it == '' || it.isEmpty ||  RegExp(r'(\+?([ ()-+]|[0-9])+)$').hasMatch(it)`
                })
            ]
        })
        (workTelephone {
            name 'Work Telephone'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Allows numbers and only + - / ( )'
                    expression `it == '' || it.isEmpty ||  RegExp(r'(\+?([ ()-+]|[0-9])+)$').hasMatch(it)`
                })
            ]
        })
        (workEmail {
            name 'Work Email'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Invalid email'
                    expression `it == null || it.isEmpty || FieldValidation.isEmail(it)`
                })
            ]
        })
        (otherEmail {
            name 'Other Email'
            type ({
                primitive String
            })
            validations [
                ({
                    errorMsg 'Invalid email'
                    expression `it == null || it.isEmpty || FieldValidation.isEmail(it)`
                })
            ]
        })
        (attachments{
            type ({
                model #Attachment
            })
            collection true
            inverse true
            inverseProperty #contactDetails
        })
    ]
    actions [
        (saveAuditRecordOnCreate {
            runOn OnCreate
            block ```
                List<String> changes = [
                    EmployeeUtil.getChangedStringForNewField('Address Street 1', addressStreet1),
                    EmployeeUtil.getChangedStringForNewField('Address Street 2', addressStreet2),
                    EmployeeUtil.getChangedStringForNewField('City Town', cityTown),
                    EmployeeUtil.getChangedStringForNewField('State Province', stateProvince),
                    EmployeeUtil.getChangedStringForNewField('ZIP Code', zIPCode),
                    EmployeeUtil.getChangedStringForNewField('Country', country),
                    EmployeeUtil.getChangedStringForNewField('Mobile', mobile),
                    EmployeeUtil.getChangedStringForNewField('Home Telephone', homeTelephone),
                    EmployeeUtil.getChangedStringForNewField('Work Telephone', workTelephone),
                    EmployeeUtil.getChangedStringForNewField('Work Email', workEmail),
                    EmployeeUtil.getChangedStringForNewField('Other Email', otherEmail),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'ADD CONTACT DETAILS -I',
                        employee: employee,
                        section: 'Personal Details',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (saveAuditRecordOnUpdate {
            runOn OnUpdate
            block ```
                if (old == null) {
                    return;
                }

                List<String> changes = [
                    EmployeeUtil.getChangedFromStringFromObjects('Address Street 1', old.addressStreet1, addressStreet1),
                    EmployeeUtil.getChangedFromStringFromObjects('Address Street 2', old.addressStreet2, addressStreet2),
                    EmployeeUtil.getChangedFromStringFromObjects('City Town', old.cityTown, cityTown),
                    EmployeeUtil.getChangedFromStringFromObjects('State Province', old.stateProvince, stateProvince),
                    EmployeeUtil.getChangedFromStringFromObjects('ZIP Code', old.zIPCode, zIPCode),
                    EmployeeUtil.getChangedFromStringFromObjects('Country', old.country, country),
                    EmployeeUtil.getChangedFromStringFromObjects('Mobile', old.mobile, mobile),
                    EmployeeUtil.getChangedFromStringFromObjects('Home Telephone', old.homeTelephone, homeTelephone),
                    EmployeeUtil.getChangedFromStringFromObjects('Work Telephone', old.workTelephone, workTelephone),
                    EmployeeUtil.getChangedFromStringFromObjects('Work Email', old.workEmail, workEmail),
                    EmployeeUtil.getChangedFromStringFromObjects('Other Email', old.otherEmail, otherEmail),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'UPDATE CONTACT DETAILS -I',
                        employee: employee,
                        section: 'Personal Details',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
    ]
})