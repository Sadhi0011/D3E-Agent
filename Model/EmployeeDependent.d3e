(Model EmployeeDependent {
    name 'Employee Dependent'
    
    master #Employee
    enableCustomFields true
    package 'rewahr.com'
    properties [
        (name {
            name 'Name'
            type ({
                primitive String
            })
            required true
        })
        (relationship {
            name 'Relationship'
            type ({
                primitive String
            })
            required true
        })
        (dateOfBirth {
            name 'Date Of Birth'
            type ({
                primitive Date
            })
        })
        (dateOfRegistration {
            name 'DateOfRegistration'
            type ({
                primitive Date
            })
        })
        (reportToAttachments{
            type ({
                model #Attachment
            })
            collection true
            inverse true
            inverseProperty #dependent
        })
    ]
    actions [
        (saveAuditRecordOnCreate {
            runOn OnCreate
            block ```
                List<String> changes = [
                    EmployeeUtil.getChangedStringForNewField('Name', name),
                    EmployeeUtil.getChangedStringForNewField('Relationship', relationship),
                    EmployeeUtil.getChangedStringForNewField('Date of Birth', dateOfBirth),
                    EmployeeUtil.getChangedStringForNewField('Date of Registration', dateOfRegistration),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'ADD DEPENDENT DETAILS -I',
                        employee: employee,
                        section: 'Dependent',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (saveAuditRecordOnUpdate {
            runOn OnUpdate
            block ```
                if (old == null) {
                    return;
                }

                List<String> changes = [
                    EmployeeUtil.getChangedFromString('Name', old.name, name),
                    EmployeeUtil.getChangedFromString('Relationship', old.relationship, relationship),
                    EmployeeUtil.getChangedFromStringFromObjects('Date of Birth', old.dateOfBirth, dateOfBirth),
                    EmployeeUtil.getChangedFromStringFromObjects('Date of Registration', old.dateOfRegistration, dateOfRegistration),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'UPDATE DEPENDENT DETAILS -U',
                        employee: employee,
                        section: 'Dependent',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
    ]
})