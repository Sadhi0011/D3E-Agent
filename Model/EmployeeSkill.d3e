(Model EmployeeSkill {
    name 'Employee Skill'
    
    master #Employee
    package 'rewa.hr.2'
    properties [
        (skill {
            name 'Skill'
            type ({
                model #Skill
            })
            required true
        })
        (yearsOfExperience {
            name 'Years of Experience'
            type ({
                primitive Double
            })
        })
        (comments {
            name 'Comments'
            type ({
                primitive String
            })
            longText true
        })
    ]
    actions [
        (saveAuditRecordOnCreate {
            runOn OnCreate
            block ```
                List<String> changes = [
                    EmployeeUtil.getChangedStringForNewField('Skill', skill.name),
                    EmployeeUtil.getChangedStringForNewField('Years of Experience', yearsOfExperience),
                    EmployeeUtil.getChangedStringForNewField('Comments', comments)
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'ADD SKILL DETAILS -I',
                        employee: employee,
                        section: 'Qualification',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (saveAuditRecordOnUpdate {
            runOn OnUpdate
            block ```
                if (old == null) {
                    return;
                }

                List<String> changes = [
                    EmployeeUtil.getChangedFromString('Skill', old.skill.name, skill.name),
                    EmployeeUtil.getChangedFromStringFromObjects('Years of Experience', old.yearsOfExperience, yearsOfExperience),
                    EmployeeUtil.getChangedFromString('Comments', old.comments, comments)
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'UPDATE WORK EXPERIENCE DETAILS -U',
                        employee: employee,
                        section: 'Qualification',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (deleteAuditRecordOnDelete {
            runOn OnDelete
            block ```
                EmployeeUtil.addAuditRecord(
                    company: employee.company,
                    action: 'DELETE WORK EXPERIENCE DETAILS',
                    employee: employee,
                    section: 'Qualification',
                    actionDescription: [
                        skill.name,
                        yearsOfExperience,
                        comments,
                    ].join('\n'),
                );
            ```
        })
    ]
})