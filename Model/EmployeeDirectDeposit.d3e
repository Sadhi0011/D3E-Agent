(Model EmployeeDirectDeposit {
    name 'Employee Direct Deposit'
    
    master #Employee
    enableCustomFields true
    package 'rewahr.com'
    properties [
        (amount {
            name 'Amount'
            type ({
                primitive Double
            })
            required true
        })
        (accountNumber {
            name 'Account Number'
            type ({
                primitive String
            })
            validations [
                ({
                    expression `accountNumber.length < 30 && RegExp(r'^[-+]?[0-9]+$').hasMatch(it)`
                    errorMsg 'AccountNumber should not exceeds 30 characters && Should be a valid number'
                })
            ]
            required true
        })
        (financialInstitution {
            name 'Financial Institution'
            type ({
                primitive String
            })
        })
        (accountType {
            name 'Account Type'
            type ({
                optionSet #AccountType
            })
        })
        (branchLocation {
            name 'Branch Location'
            type ({
                primitive String
            })
        })
        (routingNumber {
            name 'Routing Number'
            type ({
                primitive String
            })
        })
    ]
    actions [
        (saveAuditRecordOnCreate {
            runOn OnCreate
            block ```
                List<String> changes = [
                    EmployeeUtil.getChangedStringForNewField('Amount', amount),
                    EmployeeUtil.getChangedStringForNewField('Account Number', accountNumber),
                    EmployeeUtil.getChangedStringForNewField('Financial Institution', financialInstitution),
                    EmployeeUtil.getChangedStringForNewField('Account Type', accountType),
                    EmployeeUtil.getChangedStringForNewField('Branch Location', branchLocation),
                    EmployeeUtil.getChangedStringForNewField('Routing Number', routingNumber),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'ADD DIRECT DEPOSIT DETAILS -I',
                        employee: employee,
                        section: 'Direct Deposit',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (saveAuditRecordOnUpdate {
            runOn OnUpdate
            block  ```
                if(old == null) {
                    return;
                }

                List<String> changes = [
                    EmployeeUtil.getChangedFromStringFromObjects('Amount', old.amount, amount),
                    EmployeeUtil.getChangedFromString('Account Number', old.accountNumber, accountNumber),
                    EmployeeUtil.getChangedFromString('Financial Institution', old.financialInstitution, financialInstitution),
                    EmployeeUtil.getChangedFromStringFromObjects('Account Type', old.accountType, accountType),
                    EmployeeUtil.getChangedFromString('Branch Location', old.branchLocation, branchLocation),
                    EmployeeUtil.getChangedFromString('Routing Number', old.routingNumber, routingNumber),
                ].where((x) => x != null);

                if (changes.isNotEmpty) {
                    EmployeeUtil.addAuditRecord(
                        company: employee.company,
                        action: 'UPDATE DIRECT DEPOSIT DETAILS -U',
                        employee: employee,
                        section: 'Direct Deposit Details',
                        actionDescription: changes.join('\n'),
                    );
                }
            ```
        })
        (deleteAuditRecordOnDelete {
            runOn OnDelete
            block ```
                EmployeeUtil.addAuditRecord(
                    company: employee.company,
                    action: 'DELETE DIRECT DEPOSIT DETAILS',
                    employee: employee,
                    section: 'Direct Deposit Details',
                    actionDescription: [
                        amount,
                        accountNumber,
                        financialInstitution,
                        accountType,
                        branchLocation.toString(),
                        routingNumber
                    ].join('\n'),
                );
            ```
        })
    ]
})